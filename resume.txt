========================================================================================

GITHUB: https://github.com/dstrctrng (as Tom Bombadil, David Romulan)

========================================================================================

OPERATIONS ENGINEER, PATH, 2013 - current

Joined a Puppet shop after using Chef for the last couple jobs.  Worked
with Python apps connected to Redis, Memcache, Mongo, ElasticSearch on
Ubuntu in AWS.

- Autoscale existing/new applications on AWS EC2, greately assisted by:

  * golden images
  * building artifacts in vagrants (packages, binary rubies)
  * pkgsrc for cross-platform compatibility between OSX and Ubuntu
  * CI for puppet changes
  * scripts to manage AWS inventory
  * automated deploys

LEAD OPERATIONS ENGINEER, BLEACHER REPORT, 2013 - 2013

Transitioned from EngineYard admin support + Linux contractor to
in-house operations team of two:

- Migrate services from EngineYard Cloud into Bleacher Report AWS
  (redis, memcache, mysql, node and ruby applications)

- Build out new Cloud Formation stacks in AWS

- Put one-off EC2 instances under chef; only CF stacks were under
  configuration management

- Edgecast to Akamai CDN (images and video streams)

- Daily golden image builds to reduce app build times and apply security
  updates

- cleanup script to monitor deviant AWS behavior and resources, keeping
  AWS charges to budget

OpsDev tooling:

- Automated administrator onboarding with OS X + Ubuntu compatible tools
  stack: vagrant, aws cli, make, chef

- Boxcar build scripts targetting Vagrants on VirtualBox, AWS EC2, Docker

- Build packages (pkgsrc, debs, rvm ruby binaries, docker images) in
  Vagrants

- Vagrant shell provider to implement Docker support

- git-cache to remove github as point of failure, performance bottleneck
  for machine builds and deploys

- squid-cache to remove http resources points of failure

- gandalf wrapper around pgp for managing secrets (SSL keys, ssh keys,
  passwords)

- pkgsrc binary packages for OS X and Ubuntu

- alox, packaging bash scripts in the ruby gems ecosystem to be managed
  by bundler

========================================================================================

LEAD INFRASTRUCTURE ENGINEER, ZENDESK, 2011 - 2012

Transitioned from operations to building tools fulltime.  Support
developer and operations staff in making applications deployable,
maintaining the OS X developer workstation build, contribute to chef
cookbooks and chef hacks for compare/dry-run mode.  Recently, working on
SSAE16 compliance of deploys.

Built lots of fun things using these building blocks:

- alpha_omega: inspired by https://github.com/blog/1091-spring-cleaning,
  a fork of capistrano deploy recipes for persistent release workareas
  (for rollback, current, staged apps, and dedicated compare and
  migration).

- microwave: fork of chef solo for non-root application configuration,
  works with alpha_omega so code and configuration are deployed as a
  unit.

- tvdinners: cookbooks wrapped in a gem, for chef cookbook reuse.

- johnny: vagrant and veewee definitions for building basic Ubuntu distro
  images, as well as developer variants of the production environment.

- jason: bash library, using shflags and log4sh scripts, implements
  37signals' sub interface.

- paul: fork of hub, with git flow mixed in, along with a collection of
  git sub commands (to do cool stuff like encrypting the git repo with
  openssl, setting up a workarea using .gitsetup.yml)

- junas: a play on project janus, a vim framework in 100% vim

- cue: bash prompt library, can write plugins to add shell indicators.

- pancake: OS X software distribution with macports and homebrew package
  backends.

- macports: non-root, anchored binary MacPorts distribution

- rb-helper: git mixin to assist in ruby gems developer (easy bin/bump,
  bin/build, and bin/publish cli interface for all my gems)

- sigmeh: irssi client as a bot, includes attempt to make a king of Perl
  bundler using CPAN modules.

* Using Ubuntu, bash, ruby, bundler, chef, vagrant, capistrano, rvm,
  unicorn, runit, MacPorts, homebrew

========================================================================================

TEAM LEAD, OPERATIONS ENGINEER, ZENDESK, 2009 - 2011

Started without knowing the technology stack (heavy Ruby shop), currently team
lead of the operations team of four administrators (including myself).

 - Multiple datacenters
 - Pods, isolated instances of the application environment in the same DC
 - Day-to-day leadership of the operations team
 - Shards, isolated application data in separate MySQL clusters
 - Engine Yard to Rackspace managed hosting move
 - Chef cookbooks, with patch to dry-run and compare differences
 - Capistrano deploys with persistent releases
 - Homebrew distribution on developer OS X laptops

 * Using Ubuntu Linux, Ruby, Node; capistrano, chef, nginx, unicorn, exim,
   resque, redis, mongo, memcache, solr, boson.

========================================================================================

SENIOR UNIX ADMINISTRATOR, BARCLAYS GLOBAL INVESTORS, 2005 - 2008

Started as a UNIX enthusiast on a one-month contract, ended as a senior member
of the UNIX operations and projects team.  Mostly worked on automation and large
project evaluations/rollouts.

 - Datacenter moves
 - Building power-downs, drills
 - Cyberark password management
 - PowerBroker privilege escalation
 - HP OpenView check scripts
 - Veritas suite of products: Cluster server, file-system, volume management
 - Jumpstart JET
 - Splunk
 - Sun N1 Grid Engine

 * Using Solaris 8, 10 Sparc, Redhat Enterprise Linux 4, 5, VMware ESX; Perl.
   A lot of proprietary software typical at an investment bank.

========================================================================================

ADMINISTRATOR AND OWNER, BEIGE TOWER, 2002 - 2006

Personally financed a free web hosting service to get diverse experience as a
systems administrator in preparation for a new career.

 - Host various services for free in exchange for ads placement
 - Customize open source packages for multi-tenant hosting
 - OpenBSD pf/carp firewall, networking

 * Using OpenBSD, RedHat, and Solaris; Perl

========================================================================================

SOFTWARE DEVELOPER, BARCLAYS GLOBAL INVESTORS, 2005 - 2008

Tools developer supporting application teams.

 - Build and release management tools using cvs, make
 - Perl application server for internal web applications
 - Deploy applications

 * Using Perl

========================================================================================

SOFTWARE DEVELOPER, GURU, 2000 - 2002

Tools developer supporting application teams.

 - Build and release management tools using cvs, make
 - Replace DART email service with in-house qmail server farm
 - Maintain content management system for web site content and email campaigns

 * Using ATG Dynamoc application server, RedHat; Perl, Java

========================================================================================

SOFTWARE DEVELOPER, WHYNOT CREATIONS, 1998 - 1999

First job with software, started with a hobbyist knowledge of Java and C, left
with a taste for UNIX administration and scripting.

 - Unexpected UNIX administrator for a datacenter of Solaris servers
 - Application server implemented as Apache C module
 - HTTP Proxy in Java to front Macromedia Flash content generation

 * Using Solaris; Perl, Java, Apache

